var 1..3: INT____00001 :: is_defined_var :: var_is_introduced;
var 1..3: INT____00002 :: is_defined_var :: var_is_introduced;
var 1..3: INT____00003 :: is_defined_var :: var_is_introduced;
var 1..3: INT____00004 :: is_defined_var :: var_is_introduced;
var 1..3: INT____00005 :: is_defined_var :: var_is_introduced;
var 1..3: INT____00006 :: is_defined_var :: var_is_introduced;
var 1..3: INT____00007 :: is_defined_var :: var_is_introduced;
var 1..3: INT____00008 :: is_defined_var :: var_is_introduced;
var 1..3: INT____00009 :: is_defined_var :: var_is_introduced;
array [1..9] of var 1..3: solution :: output_array([1..3, 1..3]) = [INT____00001, INT____00002, INT____00003, INT____00004, INT____00005, INT____00006, INT____00007, INT____00008, INT____00009];
array [1..27] of var 0..1: x_lp;
constraint int_lin_eq([1, 1, 1], [x_lp[1], x_lp[2], x_lp[3]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[1], x_lp[4], x_lp[7]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[1], x_lp[10], x_lp[19]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[2], x_lp[5], x_lp[8]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[2], x_lp[11], x_lp[20]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[3], x_lp[6], x_lp[9]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[3], x_lp[12], x_lp[21]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[4], x_lp[5], x_lp[6]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[4], x_lp[13], x_lp[22]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[5], x_lp[14], x_lp[23]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[6], x_lp[15], x_lp[24]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[7], x_lp[8], x_lp[9]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[7], x_lp[16], x_lp[25]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[8], x_lp[17], x_lp[26]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[9], x_lp[18], x_lp[27]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[10], x_lp[11], x_lp[12]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[10], x_lp[13], x_lp[16]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[11], x_lp[14], x_lp[17]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[12], x_lp[15], x_lp[18]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[13], x_lp[14], x_lp[15]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[16], x_lp[17], x_lp[18]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[19], x_lp[20], x_lp[21]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[19], x_lp[22], x_lp[25]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[20], x_lp[23], x_lp[26]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[21], x_lp[24], x_lp[27]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[22], x_lp[23], x_lp[24]], 1);
constraint int_lin_eq([1, 1, 1], [x_lp[25], x_lp[26], x_lp[27]], 1);
constraint int_lin_eq([-1, 1, 2, 3], [INT____00001, x_lp[1], x_lp[2], x_lp[3]], 0) :: defines_var(INT____00001);
constraint int_lin_eq([-1, 1, 2, 3], [INT____00002, x_lp[4], x_lp[5], x_lp[6]], 0) :: defines_var(INT____00002);
constraint int_lin_eq([-1, 1, 2, 3], [INT____00003, x_lp[7], x_lp[8], x_lp[9]], 0) :: defines_var(INT____00003);
constraint int_lin_eq([-1, 1, 2, 3], [INT____00004, x_lp[10], x_lp[11], x_lp[12]], 0) :: defines_var(INT____00004);
constraint int_lin_eq([-1, 1, 2, 3], [INT____00005, x_lp[13], x_lp[14], x_lp[15]], 0) :: defines_var(INT____00005);
constraint int_lin_eq([-1, 1, 2, 3], [INT____00006, x_lp[16], x_lp[17], x_lp[18]], 0) :: defines_var(INT____00006);
constraint int_lin_eq([-1, 1, 2, 3], [INT____00007, x_lp[19], x_lp[20], x_lp[21]], 0) :: defines_var(INT____00007);
constraint int_lin_eq([-1, 1, 2, 3], [INT____00008, x_lp[22], x_lp[23], x_lp[24]], 0) :: defines_var(INT____00008);
constraint int_lin_eq([-1, 1, 2, 3], [INT____00009, x_lp[25], x_lp[26], x_lp[27]], 0) :: defines_var(INT____00009);
solve satisfy;

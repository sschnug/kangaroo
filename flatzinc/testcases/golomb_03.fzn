predicate kangaroo_int_all_different(array [int] of var int: x);
predicate kangaroo_int_all_different_reif(array [int] of var int: x, var bool: r);
var 0..8: INT____00001 :: is_defined_var :: var_is_introduced;
var 0..9: INT____00002 :: is_defined_var :: var_is_introduced;
var 1..9: INT____00003 :: is_defined_var :: var_is_introduced;
array [1..3] of var 0..9: differences = [INT____00001, INT____00002, INT____00003];
array [1..3] of var 0..9: mark :: output_array([1..3]);
constraint int_eq(mark[1], 0);
constraint int_lin_eq([-1, -1, 1], [INT____00001, mark[1], mark[2]], 0) :: defines_var(INT____00001);
constraint int_lin_eq([-1, -1, 1], [INT____00002, mark[1], mark[3]], 0) :: defines_var(INT____00002);
constraint int_lin_eq([-1, -1, 1], [INT____00003, mark[2], mark[3]], 0) :: defines_var(INT____00003);
constraint int_lt(INT____00001, INT____00003);
constraint int_lt(mark[1], mark[2]);
constraint int_lt(mark[2], mark[3]);
constraint kangaroo_int_all_different(differences);
solve minimize mark[3];
